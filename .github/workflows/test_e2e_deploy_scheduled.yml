name: Test E2E (Vercel Deploy), scheduled

on:
  schedule:
    # run every day at midnight
    - cron: '0 0 * * *'
  # allow triggering manually as well
  workflow_dispatch:

jobs:
  test:
    if: github.repository_owner == 'vercel'
    runs-on: ubuntu-latest

    env:
      CARGO_PROFILE_RELEASE_LTO: 'true'
      DATADOG_API_KEY: ${{ secrets.DATA_DOG_API_KEY }}
      DD_ENV: 'ci'
      NAPI_CLI_VERSION: 2.16.2
      NEXT_JUNIT_TEST_REPORT: 'true'
      NEXT_TELEMETRY_DISABLED: 1
      NEXT_TEST_CONTINUE_ON_ERROR: 1
      NEXT_TEST_JOB: 1
      NEXT_TEST_MODE: 'deploy'
      NODE_LTS_VERSION: 20
      TEST_TIMINGS_TOKEN: ${{ secrets.TEST_TIMINGS_TOKEN }}
      TURBO_REMOTE_ONLY: 'true'
      TURBO_TEAM: 'vercel'
      TURBO_VERSION: 1.13.3-canary.2
      VERCEL_TEST_TEAM: vtest314-next-e2e-tests
      VERCEL_TEST_TOKEN: ${{ secrets.VERCEL_TEST_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        group: [1, 2]

    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_LTS_VERSION }}
          check-latest: true

      - name: Setup pnpm
        run: corepack enable

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 25

      - name: Setup tests
        run: |
          pnpm install
          pnpm run build
          npm i -g vercel@latest
          node scripts/run-e2e-test-project-reset.mjs

      - name: Run tests
        run: |
          docker run --rm -v $(pwd):/work mcr.microsoft.com/playwright:v1.41.2-jammy /bin/bash -c "cd /work && \
          NODE_VERSION=${{ env.NODE_LTS_VERSION }} ./scripts/setup-node.sh && \ 
          corepack enable > /dev/null && \
          NEXT_JUNIT_TEST_REPORT=${{ env.NEXT_JUNIT_TEST_REPORT }} \
          DATADOG_API_KEY=${{ env.DATADOG_API_KEY }} \
          DD_ENV=${{ env.DD_ENV }} \ 
          VERCEL_TEST_TOKEN=${{ env.VERCEL_TEST_TOKEN }} \
          VERCEL_TEST_TEAM=${{ env.VERCEL_TEST_TEAM }} \
          NEXT_TEST_JOB=${{ env.NEXT_TEST_JOB }} \
          NEXT_TEST_MODE=${{ env.NEXT_TEST_MODE }} \
          TEST_TIMINGS_TOKEN=${{ env.TEST_TIMINGS_TOKEN }} \
          xvfb-run node run-tests.js --type e2e --timings -g ${{ matrix.group }}/2 -c 1 >> /proc/1/fd/1"

      - name: Save test report as artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          if-no-files-found: ignore
          retention-days: 2
          path: test/test-junit-report

      - name: Upload test report to Datadog
        continue-on-error: true
        run: |
          pnpx @datadog/datadog-ci@2.23.1 junit upload --tags test.type:nextjs_deploy_e2e --service nextjs ./test/test-junit-report
