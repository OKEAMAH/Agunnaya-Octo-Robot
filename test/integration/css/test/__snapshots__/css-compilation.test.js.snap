// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CSS Support production mode CSS Compilation and Prefixing useLightnincsss(false) should've compiled and prefixed 1`] = `"@media (min-width:480px) and (max-width:767px){::placeholder{color:green}}.flex-parsing{flex:0 0 calc(50% - var(--vertical-gutter))}.transform-parsing{transform:translate3d(0,0)}.css-grid-shorthand{grid-column:span 2}.g-docs-sidenav .filter::-webkit-input-placeholder{opacity:80%}"`;

exports[`CSS Support production mode CSS Compilation and Prefixing useLightnincsss(false) should've emitted a source map 1`] = `
{
  "mappings": "AAAA,+CACE,cACE,WACF,CACF,CAEA,cACE,2CACF,CAEA,mBACE,0BACF,CAEA,oBACE,kBACF,CAEA,mDACE,WACF",
  "sourcesContent": [
    "@media (480px <= width < 768px) {
  ::placeholder {
    color: green;
  }
}

.flex-parsing {
  flex: 0 0 calc(50% - var(--vertical-gutter));
}

.transform-parsing {
  transform: translate3d(0px, 0px);
}

.css-grid-shorthand {
  grid-column: span 2;
}

.g-docs-sidenav .filter::-webkit-input-placeholder {
  opacity: 80%;
}
",
  ],
  "version": 3,
}
`;

exports[`CSS Support production mode CSS Compilation and Prefixing useLightnincsss(true) should've compiled and prefixed 1`] = `"@media (min-width:480px) and (max-width:767.999px){::placeholder{color:green}}.flex-parsing{flex:0 0 calc(50% - var(--vertical-gutter))}.transform-parsing{transform:translate3d(0,0)}.css-grid-shorthand{grid-column:span 2}.g-docs-sidenav .filter::-webkit-input-placeholder{opacity:.8}"`;

exports[`CSS Support production mode CSS Compilation and Prefixing useLightnincsss(true) should've emitted a source map 1`] = `
{
  "mappings": "AAAA,mDACE,cACE,WACF,CACF,CAEA,cACE,2CACF,CAEA,mBACE,0BACF,CAEA,oBACE,kBACF,CAEA,mDACE,UACF",
  "sourcesContent": [
    "@media (min-width: 480px) and (max-width: 767.999px) {
  ::placeholder {
    color: green;
  }
}

.flex-parsing {
  flex: 0 0 calc(50% - var(--vertical-gutter));
}

.transform-parsing {
  transform: translate3d(0px, 0px);
}

.css-grid-shorthand {
  grid-column: span 2;
}

.g-docs-sidenav .filter::-webkit-input-placeholder {
  opacity: .8;
}

",
  ],
  "version": 3,
}
`;

exports[`CSS Support production mode Good Nested CSS Import from node_modules useLightnincsss(false) should've emitted a single CSS file 1`] = `".other{color:blue}.test{color:red}"`;

exports[`CSS Support production mode Good Nested CSS Import from node_modules useLightnincsss(true) should've emitted a single CSS file 1`] = `".other{color:#00f}.test{color:red}"`;
